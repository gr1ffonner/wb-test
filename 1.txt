нужно кароче знать чо: 
как устроен бэк в целом
разные арх подходы: монолит, микросервисы в чем плюсы и минусы
microservice arch project (onion, ddd)
message brokers - так как обычно с помощью них и общаются микросервсисы
kafka, rabbitmq, nats  посмотри про все важно знать, чем отличаются
гарантии доставки
рекомендую остановится на кафке - так как это стандарт индустрии ее все юзают
docker зачем нужен
docker compose 
k8s
гит зачем нужен
как происходит деплой и развертывание 
ci/cd
monitoring
tesing
пирамида тестирования
базы данных sql/nosql, 
оптимизация запросов в бд
индексы в бд
протоколы общения: http, grpc 
http1/http2 в чем разница чо круче где и как использовать 
основы кэширования, здесь можно чисто на редисе остановиться
какие проблемы оно решает
масштабирование приложений вертикальное горизонтальное
как в целом http устроен 
как общаются клиент и сервер 
http methods (post, put, delete, get и так далее)



тз - уточнение тз - проектирование - имплементация + тестирование - контейниризация - деплой - поддержка + мониторинг 
поддержка: фикс багов, добавка фичей
мониторинг: алерты, логи, трэйэсы, метрики
алерты 
логи 
1 апи вызов
сохраняем в бд 
прогреваем кэш 

трэйсы 

метрики 
